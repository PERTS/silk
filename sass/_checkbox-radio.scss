.Skin .MC {

  li input.radio {
    margin-top: 8px;
    margin-right: 18px
  }

  input[type="radio"] {
    position: relative;
    margin-top: 6px;
    cursor: pointer;

    &:after {
      content: "";
      position: absolute;
      height: 20px;
      width: 20px;
      background-color: white;
      @include border-radius(10px);
      border: 2px solid #666;
      @include box-sizing(border-box);

      @media only screen and (min-width: 768px) and (max-width: 1024px) {
        content: none;
      }
    }

    &:checked:after {
      background-color: $dark-blue;
      border: 2px solid $dark-blue;
    }
  }

  td input[type="radio"]:after {
    top: -1px;
    left: -4px;
  }

  li input[type="radio"]:after {
    top: -2px;
    left: -2px;
  }

  input.checkbox {
    position: relative;
    margin: 10px 15px;

    &:after {
      content: "";
      position: absolute;
      top: -4px;
      left: -6px;
      height: 20px;
      width: 20px;
      background-color: white;
      border: 2px solid #666;
      @include box-sizing(border-box);

      @media(min-width: 768px) and (max-width: 1024px)  {
        content: none;
      }
    }

    &:checked:after {
      background-color: $dark-blue;
      border-color: $dark-blue;
    }
  }

  @media screen and (max-width: 500px) {

    table {
      display: block;

      tbody,
      tr,
      td {
        display: block;
        width: 100%;
      }

      td span.LabelWrapper {
        position: relative;
        padding-left: 45px;
        cursor: pointer;
        text-align: left;

        br {
          display: none;
        }

        label:after {
          content: "";
          position: absolute;
          height: 20px;
          width: 20px;
          background-color: white;
          @include border-radius(10px);
          border: 2px solid #666;
          @include box-sizing(border-box);
          top: -1px; left: 10px;
        }

        label.q-checked:after {
          background-color: $dark-blue;
          border-color: $dark-blue;
        }
      }

      td.ControlContainer {
        height: 0;
        visibility: hidden;
      }
    }
  }
}

// Android and iOS

#SurveyEngineBody.iOS,
#SurveyEngineBody.Android {

  /* Mobile controls are bigger, so we need to adjust the ::after bits (which */
  /* skin the native controls by floating over them). */
  .Skin .MC input.checkbox::after {
    top: -1px;
    height: 30px;
    width: 30px;
  }

  /* Qualtrics tries to put in a weird checkmark thingy in iPads. Kill it. */
  input.checkbox:checked::after {
    content: "";
    background: $dark-blue;
    /* Need to override Qualtrics Base styles */
    top: -1px;
    left: -1px;
  }

  .Skin .MC input[type="radio"]::after,
  .Skin .MC input[type="radio"]::after {
    height: 30px;
    width: 30px;
    @include border-radius(15px);
  }

  /* Qualtrics adds weird list item markers using :before content on mobile */
  .Skin ul li:before,
  .Skin ul li:before {
    content: none;
  }

  /* Allows for scrolling MC questions on mobile devices */
  .Skin #Questions .QuestionOuter.MC fieldset .QuestionBody,
  .Skin #Questions .QuestionOuter.MC fieldset .QuestionBody {
    overflow-x: auto;
    -webkit-overflow-scrolling: auto;
    -ms-overflow-style: auto;
    -ms-overflow-x: auto;
  }
}

#SurveyEngineBody.iOS {
  .Skin .MC input.checkbox::after {
    left: -1px;
  } 


  .Skin .MC td input[type="radio"]::after,
  .Skin .MC li input[type="radio"]::after {
    top: -1px;
    left: -1px;
  }
}

#SurveyEngineBody.Android {
  .Skin .MC input.checkbox::after {
    left: 0px;
  }

  .Skin .MC td input[type="radio"]::after,
  .Skin .MC li input[type="radio"]::after {
    top: -1px;
    left: 0;
  }

  .Skin .MC td input[type="radio"]:checked:after,
  .Skin .MC li input[type="radio"]:checked:after {
    top: -2px;
    left: -2px;
  }
}
